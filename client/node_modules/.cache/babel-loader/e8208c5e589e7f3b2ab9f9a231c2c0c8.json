{"ast":null,"code":"var _jsxFileName = \"/Users/trangm/VisualStudio/meal-planner-v5/src/components/ViewRecipes.jsx\",\n  _s = $RefreshSig$();\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport RecipeCard from './RecipeCard';\nimport ViewRecipe from './ViewRecipe';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Button, ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewRecipes() {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const categories = [{\n    name: 'favorites',\n    checked: false\n  }, {\n    name: 'beef',\n    checked: false\n  }, {\n    name: 'chicken',\n    checked: false\n  }, {\n    name: 'pork',\n    checked: false\n  }, {\n    name: 'vegetarian',\n    checked: false\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: true,\n      flush: true,\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            className: \"me-2\",\n            id: \"toggle-check\",\n            type: \"checkbox\",\n            variant: \"outline-primary\",\n            checked: checked,\n            value: \"value\",\n            onChange: e => setChecked(e.currentTarget.checked),\n            children: \"Date Added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(ToggleButton, {\n            className: \"me-2\",\n            id: \"toggle-check\",\n            type: \"checkbox\",\n            variant: \"outline-primary\",\n            checked: checked,\n            value: \"value\",\n            onChange: e => setChecked(e.currentTarget.checked),\n            children: \"Frequency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            className: \"me-2\",\n            id: \"toggle-check\",\n            type: \"checkbox\",\n            variant: \"outline-primary\",\n            checked: checked,\n            value: \"value\",\n            onChange: e => setChecked(e.currentTarget.checked),\n            children: \"Recently Prepared\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: categories.map(category => {\n            return /*#__PURE__*/_jsxDEV(ToggleButton, {\n              className: \"me-2\",\n              id: \"toggle-check\",\n              type: \"checkbox\",\n              variant: \"outline-primary\",\n              checked: category.checked,\n              value: category.name,\n              onChange: e => setChecked(e.currentTarget.checked),\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewRecipe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewRecipes, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n_c = ViewRecipes;\nexport default ViewRecipes;\nvar _c;\n$RefreshReg$(_c, \"ViewRecipes\");","map":{"version":3,"names":["Container","Row","Col","RecipeCard","ViewRecipe","Accordion","Button","ButtonGroup","ToggleButton","useState","ViewRecipes","checked","setChecked","categories","name","e","currentTarget","map","category"],"sources":["/Users/trangm/VisualStudio/meal-planner-v5/src/components/ViewRecipes.jsx"],"sourcesContent":["import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport RecipeCard from './RecipeCard';\nimport ViewRecipe from './ViewRecipe';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Button, ButtonGroup, ToggleButton } from 'react-bootstrap';\n\nimport { useState } from 'react';\n\nfunction ViewRecipes() {\n  const [checked, setChecked] = useState(false);\n  const categories = [\n    { name: 'favorites', checked: false },\n    { name: 'beef', checked: false },\n    { name: 'chicken', checked: false },\n    { name: 'pork', checked: false },\n    { name: 'vegetarian', checked: false },\n  ];\n  return (\n    <Container>\n      <h2>View Recipes</h2>\n      <Accordion defaultActiveKey flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>Sort</Accordion.Header>\n          <Accordion.Body>\n            <ToggleButton\n              className=\"me-2\"\n              id=\"toggle-check\"\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              checked={checked}\n              value=\"value\"\n              onChange={(e) => setChecked(e.currentTarget.checked)}\n            >\n              Date Added\n            </ToggleButton>{' '}\n            <ToggleButton\n              className=\"me-2\"\n              id=\"toggle-check\"\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              checked={checked}\n              value=\"value\"\n              onChange={(e) => setChecked(e.currentTarget.checked)}\n            >\n              Frequency\n            </ToggleButton>\n            <ToggleButton\n              className=\"me-2\"\n              id=\"toggle-check\"\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              checked={checked}\n              value=\"value\"\n              onChange={(e) => setChecked(e.currentTarget.checked)}\n            >\n              Recently Prepared\n            </ToggleButton>\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>Filter</Accordion.Header>\n          <Accordion.Body>\n            {categories.map((category) => {\n              return (\n                <ToggleButton\n                  className=\"me-2\"\n                  id=\"toggle-check\"\n                  type=\"checkbox\"\n                  variant=\"outline-primary\"\n                  checked={category.checked}\n                  value={category.name}\n                  onChange={(e) => setChecked(e.currentTarget.checked)}\n                >\n                  {category.name}\n                </ToggleButton>\n              );\n            })}\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n      <Row>\n        <RecipeCard></RecipeCard>\n        <RecipeCard></RecipeCard>\n        <RecipeCard></RecipeCard>\n        <RecipeCard></RecipeCard>\n        <RecipeCard></RecipeCard>\n        <RecipeCard></RecipeCard>\n        <RecipeCard></RecipeCard>\n        <RecipeCard></RecipeCard>\n        <RecipeCard></RecipeCard>\n      </Row>\n      <ViewRecipe></ViewRecipe>\n    </Container>\n  );\n}\n\nexport default ViewRecipes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}