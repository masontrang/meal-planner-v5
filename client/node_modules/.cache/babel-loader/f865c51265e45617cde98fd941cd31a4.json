{"ast":null,"code":"var _jsxFileName = \"/Users/trangm/VisualStudio/meal-planner-v5/client/src/components/MealPlanner.jsx\",\n  _s = $RefreshSig$();\nimport Pagination from 'react-bootstrap/Pagination';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useEffect, useState, useContext } from 'react';\nimport MealCard from './MealCard';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport DateSelector from './DateSelector';\nimport AddMealCard from './AddMealCard';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { DetailsContext } from '../App';\nimport './MealPlanner.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment().format();\nfunction MealPlanner() {\n  _s();\n  const {\n    user,\n    group,\n    meals,\n    setMeals\n  } = useContext(DetailsContext);\n  var startDate = moment();\n  const [dateArray, setDateArray] = useState([]);\n  const [selection, setSelection] = useState(0);\n  const getDateArray = () => {\n    const array = [];\n    for (let i = 0; i < 7; i++) {\n      startDate = moment().add(i + selection, 'd');\n      array.push(startDate.format('MMM DD'));\n    }\n    setDateArray(array);\n  };\n  const getMeals = async body => {\n    // const response = await fetch('/api/meals/getMeals', {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(body),\n    // });\n    // const json = await response.json();\n\n    setMeals([{\n      _id: {\n        $oid: '633cb21361c8c808d9abb718'\n      },\n      date: {\n        $date: {\n          $numberLong: '1664842928800'\n        }\n      },\n      breakfast: [{\n        $oid: '63119e8b8ac54d9be212f43b'\n      }],\n      lunch: [],\n      dinner: [],\n      user: {\n        $oid: '63119b3773372d0f1a550986'\n      },\n      __v: {\n        $numberInt: '0'\n      }\n    }, 1, 2, 3]);\n  };\n  useEffect(() => {\n    getDateArray();\n  }, [selection]);\n  useEffect(() => {\n    getMeals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(DateSelector\n      // className=\"DateSelector\"\n      // style={{ height: 400 }}\n      , {\n        dateArray: dateArray,\n        setSelection: setSelection,\n        selection: selection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), ' ', dateArray.map((date, index) => {\n      return /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: index,\n        children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: index,\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: date.format('MMM DD')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: meals.map(meal => {\n                return /*#__PURE__*/_jsxDEV(MealCard, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlanner, \"PS8OMDwbcuHW4otloW9xEwM0iF4=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["Pagination","Container","Row","Col","React","useEffect","useState","useContext","MealCard","Tab","Tabs","DateSelector","AddMealCard","Accordion","DetailsContext","moment","format","MealPlanner","user","group","meals","setMeals","startDate","dateArray","setDateArray","selection","setSelection","getDateArray","array","i","add","push","getMeals","body","_id","$oid","date","$date","$numberLong","breakfast","lunch","dinner","__v","$numberInt","map","index","meal"],"sources":["/Users/trangm/VisualStudio/meal-planner-v5/client/src/components/MealPlanner.jsx"],"sourcesContent":["import Pagination from 'react-bootstrap/Pagination';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport React, { useEffect, useState, useContext } from 'react';\nimport MealCard from './MealCard';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport DateSelector from './DateSelector';\nimport AddMealCard from './AddMealCard';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { DetailsContext } from '../App';\nimport './MealPlanner.css';\nimport moment from 'moment';\nmoment().format();\n\nfunction MealPlanner() {\n  const { user, group, meals, setMeals } = useContext(DetailsContext);\n  var startDate = moment();\n  const [dateArray, setDateArray] = useState([]);\n  const [selection, setSelection] = useState(0);\n\n  const getDateArray = () => {\n    const array = [];\n    for (let i = 0; i < 7; i++) {\n      startDate = moment().add(i + selection, 'd');\n      array.push(startDate.format('MMM DD'));\n    }\n    setDateArray(array);\n  };\n\n  const getMeals = async (body) => {\n    // const response = await fetch('/api/meals/getMeals', {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(body),\n    // });\n    // const json = await response.json();\n\n    setMeals([\n      {\n        _id: { $oid: '633cb21361c8c808d9abb718' },\n        date: { $date: { $numberLong: '1664842928800' } },\n        breakfast: [{ $oid: '63119e8b8ac54d9be212f43b' }],\n        lunch: [],\n        dinner: [],\n        user: { $oid: '63119b3773372d0f1a550986' },\n        __v: { $numberInt: '0' },\n      },\n      1,\n      2,\n      3,\n    ]);\n  };\n\n  useEffect(() => {\n    getDateArray();\n  }, [selection]);\n  useEffect(() => {\n    getMeals();\n  }, []);\n\n  return (\n    <Container fluid>\n      <Row className=\"mb-3\">\n        <DateSelector\n          // className=\"DateSelector\"\n          // style={{ height: 400 }}\n          dateArray={dateArray}\n          setSelection={setSelection}\n          selection={selection}\n        ></DateSelector>\n      </Row>{' '}\n      {dateArray.map((date, index) => {\n        return (\n          <Accordion defaultActiveKey={index}>\n            <Accordion.Item eventKey={index}>\n              <Accordion.Header>{date.format('MMM DD')}</Accordion.Header>\n              <Accordion.Body>\n                <Row>\n                  {meals.map((meal) => {\n                    return <MealCard></MealCard>;\n                  })}\n                  {/* <Col>\n                          <MealCard></MealCard>\n                          <MealCard></MealCard>\n                          <MealCard></MealCard>\n                          <AddMealCard></AddMealCard>\n                        </Col>\n                        <Col>\n                          <MealCard></MealCard>\n                          <MealCard></MealCard>\n                          <AddMealCard></AddMealCard>\n                        </Col>\n                        <Col>\n                          <MealCard></MealCard>\n                          <MealCard></MealCard>\n                          <MealCard></MealCard>\n                          <AddMealCard></AddMealCard>\n                        </Col> */}\n                </Row>\n              </Accordion.Body>\n            </Accordion.Item>\n          </Accordion>\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default MealPlanner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}